{"ast":null,"code":"const emailReg = /^(?:(?!.*?[.]{2})[a-zA-Z0-9](?:[a-zA-Z0-9.+!%-]{1,64}|)|\\\"[a-zA-Z0-9.+!% -]{1,64}\\\")@[a-zA-Z0-9][a-zA-Z0-9.-]+(.[a-z]{2,}|.[0-9]{1,})$/;\nexport const personalProjectApi = {\n  users: {\n    'yuanc710@gmail.com': {\n      email: 'yuanc710@gmail.com',\n      password: 'Yuanchen710'\n    },\n    'user2@gmail.com': {\n      email: 'user2@gmail.com',\n      password: 'user2'\n    }\n  },\n\n  signIn(_ref) {\n    let {\n      email,\n      password\n    } = _ref;\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (!email || !this.users[email] || !emailReg.test(email)) {\n          reject({\n            message: 'User is not existed !',\n            status: false\n          });\n        } else if (this.users[email].password !== password) {\n          reject({\n            message: 'Password is not correct !',\n            status: false\n          });\n        } else {\n          resolve({\n            json() {\n              return Promise.resolve({\n                message: 'Login succeed',\n                status: true\n              });\n            }\n\n          });\n        }\n      }, 1000);\n    });\n  },\n\n  signUp(_ref2) {\n    let {\n      email,\n      password\n    } = _ref2;\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (!email || !emailReg.test(email)) {\n          reject({\n            message: 'Email is not valid !',\n            status: false\n          });\n        } else if (!password) {\n          reject({\n            message: 'Password is not valid !',\n            status: false\n          });\n        } else if (this.users[email]) {\n          reject({\n            message: 'User is existed !',\n            status: false\n          });\n        } else {\n          this.users[email] = {\n            email,\n            password\n          };\n          resolve({\n            json() {\n              return Promise.resolve({\n                message: 'Sign up succeed',\n                status: true\n              });\n            }\n\n          });\n        }\n      }, 1000);\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/yuan/Desktop/chuwa-project/src/common/accapi.js"],"names":["emailReg","personalProjectApi","users","email","password","signIn","Promise","resolve","reject","setTimeout","test","message","status","json","signUp"],"mappings":"AAAA,MAAMA,QAAQ,GACV,wIADJ;AAGA,OAAO,MAAMC,kBAAkB,GAAG;AAC9BC,EAAAA,KAAK,EAAE;AACH,0BAAsB;AAClBC,MAAAA,KAAK,EAAE,oBADW;AAElBC,MAAAA,QAAQ,EAAE;AAFQ,KADnB;AAKH,uBAAmB;AACfD,MAAAA,KAAK,EAAE,iBADQ;AAEfC,MAAAA,QAAQ,EAAE;AAFK;AALhB,GADuB;;AAW9BC,EAAAA,MAAM,OAAsB;AAAA,QAArB;AAAEF,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAqB;AACxB,WAAO,IAAIE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,MAAAA,UAAU,CAAC,MAAM;AACb,YAAI,CAACN,KAAD,IAAU,CAAC,KAAKD,KAAL,CAAWC,KAAX,CAAX,IAAgC,CAACH,QAAQ,CAACU,IAAT,CAAcP,KAAd,CAArC,EAA2D;AACvDK,UAAAA,MAAM,CAAC;AACHG,YAAAA,OAAO,EAAE,uBADN;AAEHC,YAAAA,MAAM,EAAE;AAFL,WAAD,CAAN;AAIH,SALD,MAKO,IAAI,KAAKV,KAAL,CAAWC,KAAX,EAAkBC,QAAlB,KAA+BA,QAAnC,EAA6C;AAChDI,UAAAA,MAAM,CAAC;AAAEG,YAAAA,OAAO,EAAE,2BAAX;AAAwCC,YAAAA,MAAM,EAAE;AAAhD,WAAD,CAAN;AACH,SAFM,MAEA;AACHL,UAAAA,OAAO,CAAC;AACJM,YAAAA,IAAI,GAAG;AACH,qBAAOP,OAAO,CAACC,OAAR,CAAgB;AACnBI,gBAAAA,OAAO,EAAE,eADU;AAEnBC,gBAAAA,MAAM,EAAE;AAFW,eAAhB,CAAP;AAIH;;AANG,WAAD,CAAP;AAQH;AACJ,OAlBS,EAkBP,IAlBO,CAAV;AAmBH,KApBM,CAAP;AAqBH,GAjC6B;;AAkC9BE,EAAAA,MAAM,QAAsB;AAAA,QAArB;AAAEX,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAqB;AACxB,WAAO,IAAIE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,MAAAA,UAAU,CAAC,MAAM;AACb,YAAI,CAACN,KAAD,IAAU,CAACH,QAAQ,CAACU,IAAT,CAAcP,KAAd,CAAf,EAAqC;AACjCK,UAAAA,MAAM,CAAC;AACHG,YAAAA,OAAO,EAAE,sBADN;AAEHC,YAAAA,MAAM,EAAE;AAFL,WAAD,CAAN;AAIH,SALD,MAKO,IAAI,CAACR,QAAL,EAAe;AAClBI,UAAAA,MAAM,CAAC;AACHG,YAAAA,OAAO,EAAE,yBADN;AAEHC,YAAAA,MAAM,EAAE;AAFL,WAAD,CAAN;AAIH,SALM,MAKA,IAAI,KAAKV,KAAL,CAAWC,KAAX,CAAJ,EAAuB;AAC1BK,UAAAA,MAAM,CAAC;AACHG,YAAAA,OAAO,EAAE,mBADN;AAEHC,YAAAA,MAAM,EAAE;AAFL,WAAD,CAAN;AAIH,SALM,MAKA;AACH,eAAKV,KAAL,CAAWC,KAAX,IAAoB;AAChBA,YAAAA,KADgB;AAEhBC,YAAAA;AAFgB,WAApB;AAIAG,UAAAA,OAAO,CAAC;AACJM,YAAAA,IAAI,GAAG;AACH,qBAAOP,OAAO,CAACC,OAAR,CAAgB;AACnBI,gBAAAA,OAAO,EAAE,iBADU;AAEnBC,gBAAAA,MAAM,EAAE;AAFW,eAAhB,CAAP;AAIH;;AANG,WAAD,CAAP;AAQH;AACJ,OA9BS,EA8BP,IA9BO,CAAV;AA+BH,KAhCM,CAAP;AAiCH;;AApE6B,CAA3B","sourcesContent":["const emailReg =\n    /^(?:(?!.*?[.]{2})[a-zA-Z0-9](?:[a-zA-Z0-9.+!%-]{1,64}|)|\\\"[a-zA-Z0-9.+!% -]{1,64}\\\")@[a-zA-Z0-9][a-zA-Z0-9.-]+(.[a-z]{2,}|.[0-9]{1,})$/;\n\nexport const personalProjectApi = {\n    users: {\n        'yuanc710@gmail.com': {\n            email: 'yuanc710@gmail.com',\n            password: 'Yuanchen710',\n        },\n        'user2@gmail.com': {\n            email: 'user2@gmail.com',\n            password: 'user2',\n        },\n    },\n    signIn({ email, password }) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                if (!email || !this.users[email] || !emailReg.test(email)) {\n                    reject({\n                        message: 'User is not existed !',\n                        status: false,\n                    });\n                } else if (this.users[email].password !== password) {\n                    reject({ message: 'Password is not correct !', status: false });\n                } else {\n                    resolve({\n                        json() {\n                            return Promise.resolve({\n                                message: 'Login succeed',\n                                status: true,\n                            });\n                        },\n                    });\n                }\n            }, 1000);\n        });\n    },\n    signUp({ email, password }) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                if (!email || !emailReg.test(email)) {\n                    reject({\n                        message: 'Email is not valid !',\n                        status: false,\n                    });\n                } else if (!password) {\n                    reject({\n                        message: 'Password is not valid !',\n                        status: false,\n                    });\n                } else if (this.users[email]) {\n                    reject({\n                        message: 'User is existed !',\n                        status: false,\n                    });\n                } else {\n                    this.users[email] = {\n                        email,\n                        password,\n                    };\n                    resolve({\n                        json() {\n                            return Promise.resolve({\n                                message: 'Sign up succeed',\n                                status: true,\n                            });\n                        },\n                    });\n                }\n            }, 1000);\n        });\n    },\n};"]},"metadata":{},"sourceType":"module"}